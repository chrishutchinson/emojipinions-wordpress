// Parent element
'use strict';

var mountNode = document.getElementById('emojipinions');

// React config
var Emojipinions = React.createClass({
	displayName: 'Emojipinions',

	ajaxIsRunning: 0,

	getInitialState: function getInitialState() {
		return {
			emoji: [],
			title: wpConfig.emojipinionsTitle
		};
	},

	_vote: function _vote(key, cb) {
		jQuery.ajax({
			url: wpConfig.adminAjax,
			type: 'post',
			data: {
				action: 'emojipinionsVote',
				post: wpConfig.postId,
				emoji: key.toString()
			},
			success: (function (res) {
				if (!res.success) {
					console.error(res);
					return;
				}

				// Run the callback
				cb(res, key);
			}).bind(this),
			error: function error(err) {
				console.error(err);
			}
		});
	},

	_voteHandler: function _voteHandler(ev) {
		var target = ev.target;
		var emojiStateClone = this.state.emoji;

		emojiStateClone[target.dataset.emoji].count = parseInt(this.state.emoji[target.dataset.emoji].count) + 1;
		this.setState({
			emoji: emojiStateClone
		});

		this.ajaxIsRunning++;

		target.blur();

		this._vote(target.dataset.emoji, (function (res, key) {
			this.ajaxIsRunning--;

			if (this.ajaxIsRunning < 1) {
				var emojiStateClone = this.state.emoji;
				emojiStateClone[key].count = res.data;
				this.setState({
					emoji: emojiStateClone
				});
			}
		}).bind(this));
	},

	componentDidMount: function componentDidMount() {
		this.setState({
			emoji: wpConfig.emoji.meta,
			count: wpConfig.emoji.count
		});
	},

	render: function render() {
		// Setup our emoji
		var emojis = [];
		for (var x = 0; x < this.state.count; x++) {
			var el = React.createElement(
				'li',
				{ key: x },
				React.createElement('span', { dangerouslySetInnerHTML: { __html: this.state.emoji[x].emoji } }),
				React.createElement(
					'button',
					{ 'data-emoji': x, onClick: this._voteHandler },
					this.state.emoji[x].count
				)
			);

			emojis.push(el);
		}

		if (emojis.length > 0) {
			return React.createElement(
				'div',
				{ className: 'emojipinions__wrapper' },
				React.createElement(
					'h3',
					null,
					this.state.title
				),
				React.createElement(
					'ul',
					{ className: 'emojipinions__list' },
					emojis
				)
			);
		}

		return React.createElement('div', null);
	}

});

// React rendering
React.render(React.createElement(Emojipinions, null), mountNode);
